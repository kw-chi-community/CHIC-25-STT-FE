worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    # Gzip 압축 활성화
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;

    # 캐싱 설정 (브라우저 캐싱 개선)
    expires 1M;
    add_header Cache-Control "public, max-age=31536000, immutable";

    # HTTP 서버 설정 (HTTP → HTTPS 리디렉션)
    server {
        listen 80;
        server_name meetokey.duckdns.org;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS 서버 설정 (Let's Encrypt SSL 적용)
    server {
        listen 443 ssl;
        server_name meetokey.duckdns.org;

        # SSL 인증서 경로 (Let's Encrypt 사용 시)
        ssl_certificate /etc/letsencrypt/live/meetokey.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/meetokey.duckdns.org/privkey.pem;

        # SSL 보안 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # 보안 헤더 추가
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; object-src 'none'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; frame-ancestors 'none'; base-uri 'self';";

        # 파일 서빙 설정
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }
    }
}
